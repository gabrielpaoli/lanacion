# Drupal with PostgreSQL
#
# Access via "http://localhost:8080"
#   (or "http://$(docker-machine ip):8080" if using docker-machine)
#
# During initial Drupal setup,
# Database type: PostgreSQL
# Database name: postgres
# Database username: postgres
# Database password: example
# ADVANCED OPTIONS; Database host: postgres

version: "3"
services:
  web:
    image: nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    ports:
      - $NGINX_PORT
    volumes:
      - "./drupal/web:/var/www/html"
      - "./drupal/nginx/drupal.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      - php
    tty: true

  php:
    image: drupal
    build: ./docker/drupal
    container_name: "${PROJECT_NAME}_drupal"
    ports:
      - "9000:9000"
    volumes:
      - "./drupal/web:/var/www/html"
      - "./drupal/var:/var/www/var"
      - "./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini"
    environment:
      DOCKER_ENV: "true"
      upload_max_filesize: "100M"
      post_max_size: "100M"
      max_execution_time: "600"
      memory_limit: "512M"

    restart: always
    depends_on:
      - mysql

  mysql:
    image: mysql:5.7
    container_name: lanacion_mysql
    command: --disable-partition-engine-check
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_HOST: ${DB_HOST}
    ports:
      - ${HOST_MACHINE_DB_PORT}:3306
    volumes:
      - ./database:/var/lib/mysql
